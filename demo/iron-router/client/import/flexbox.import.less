.flexbox(@inline: false) {
	& when (@inline=false) {
		display: -webkit-flex;
		display: -moz-flex;
		display: -ms-flexbox; // IE10 uses -ms-flexbox
		display: -ms-flex; // IE11
		display: flex;
	}
	& when (@inline=inline) {
		display: -webkit-inline-flex;
		display: -moz-inline-flex;
		display: -ms-inline-flexbox; // IE10 uses -ms-flexbox
		display: -ms-inline-flex; // IE11
		display: inline-flex;
	}
}
.flexbox {
	&.column {
		-webkit-flex-direction: column;
		   -moz-flex-direction: column;
		    -ms-flex-direction: column;
		        flex-direction: column;
	}
	&.col {
		.flexbox.column;
	}
	
	&.row {
		-webkit-flex-direction: row;
		   -moz-flex-direction: row;
		    -ms-flex-direction: row;
		        flex-direction: row;
	}
	
	// How items are spaced each line.
	&.justify-start   {justify-content: flex-start;}
	&.justify-end     {justify-content: flex-end;}
	&.justify-center  {justify-content: center;}
	&.justify-between {justify-content: space-between;}
	&.justify-around  {justify-content: space-around;}
	
	// How items are aligned each line.
	&.align-item-start    {align-items: flex-start;}
	&.align-item-end      {align-items: flex-end;}
	&.align-item-center   {align-items: center;}
	&.align-item-baseline {align-items: baseline;}
	&.align-item-stretch  {align-items: stretch;}
	
	// How content is aligned if multiline. No effect in one line.
	&.align-content-start {align-content: flex-start;}
	&.align-content-end {align-content: flex-end;}
	&.align-content-center {align-content: center;}
	&.align-content-stretch {align-content: stretch;}
	&.align-content-between {align-content: space-between;}
	&.align-content-around {align-content: space-around;}
	
	&.nowrap {
		-webkit-flex-wrap: nowrap;
		   -moz-flex-wrap: nowrap;
		    -ms-flex-wrap: nowrap;
		        flex-wrap: nowrap;
	}
	&.wrap {
		-webkit-flex-wrap: wrap;
		   -moz-flex-wrap: wrap;
		    -ms-flex-wrap: wrap;
		        flex-wrap: wrap;
	}
}

// Commonly used combinations
.vbox {
	.flexbox;
	.flexbox.col;
	.flexbox.justify-start;
	.flexbox.align-content-stretch;
	.flexbox.align-item-stretch;
}
.hbox {
	.flexbox;
	.flexbox.row;
	.flexbox.justify-start;
	.flexbox.align-content-stretch;
	.flexbox.align-item-stretch;
}

.flex(@val: 1) {
	-webkit-flex: @val;
	   -moz-flex: @val;
	    -ms-flex: @val;
	        flex: @val;
}

// Display Order
// - applies to: flex items
// <integer>
.flex-order(@order: 0) {
	-webkit-order: @order;
	   -moz-order: @order;
	    -ms-order: @order;
	        order: @order;
}

// Flex grow factor
// - applies to: flex items
// <number>
.flex-grow(@grow: 0) {
	-webkit-flex-grow: @grow;
	   -moz-flex-grow: @grow;
	    -ms-flex-grow: @grow;
	        flex-grow: @grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number> 
.flex-shrink(@shrink: 0) {
	-webkit-flex-shrink: @shrink;
	   -moz-flex-shrink: @shrink;
	    -ms-flex-shrink: @shrink;
	        flex-shrink: @shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex items
// <width> 
.flex-basis(@width: auto) {
	-webkit-flex-basis: @width;
	   -moz-flex-basis: @width;
	    -ms-flex-basis: @width;
	        flex-basis: @width;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
.align-self(@align: auto) {
	-webkit-align-self: @align;
	   -moz-align-self: @align;
	    -ms-align-self: @align;
	        align-self: @align;
}
